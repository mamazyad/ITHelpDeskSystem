@*@model ITHelpDeskSystem.ViewModels.TicketViewModel

@{
    ViewBag.Title = "CreateONBehalf";
}

<h2>CreateONBehalf</h2>


@using (Html.BeginForm("CreateOnBehalf", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Attachment", "", new { type = "file" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Staff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketOwner", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Staff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@


@model ITHelpDeskSystem.ViewModels.TicketViewModel

@{
    ViewBag.Title = "Create ticket";
}

<h2 style="margin-top:1em;">Create ticket for staff</h2>
@using (Html.BeginForm("CreateOnBehalf", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row" style="display:inline-block">
    <div class="form-group col-sm-4" >
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. printer jam" } })
        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-sm-4" >
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label " })
        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-sm-3" >
        @Html.LabelFor(model => model.Staff, htmlAttributes: new { @class = "control-label " })
            @Html.DropDownList("TicketOwner", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Staff, "", new { @class = "text-danger" })
    </div>

    <div  class="form-group col-sm-1">
        @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label" })
        @Html.TextBox("Attachment", "", new { type = "file" })
    </div>
</div>

    <div class="form-group" style="margin-left: 0.25em">
        @Html.LabelFor(model => model.IncidentDescription, htmlAttributes: new { @class = "control-label " })
        @Html.TextAreaFor(model => model.IncidentDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Put your description", rows = 5 } })
        @Html.ValidationMessageFor(model => model.IncidentDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-actions no-color">
        <button class="btn btn-success pull-right "> <span class="glyphicon glyphicon-check" type="submit"></span> Done</button>
        <div style="display:inline; margin-right:40px">@Html.ActionLink("Back to all tickets", "Index", null, new { @class = "btn btn-info" })</div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script src="~/Scripts/Main.js"></script>
}
