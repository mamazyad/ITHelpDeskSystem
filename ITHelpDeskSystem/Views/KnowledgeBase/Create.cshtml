@model ITHelpDeskSystem.ViewModels.KnowledgeBaseViewModel

@{
    ViewBag.Title = "Add new solution";
}

<h2>Add new solution</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
<div class="form-horizontal">
    <hr />
    <fieldset class="fieldset-border">
        <legend class="legend-border">Incident Information</legend>
        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.IncidentTitle, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.IncidentTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.IncidentTitle, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.IncidentDescription, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.IncidentDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.IncidentDescription, "", new { @class = "text-danger" })
            </div>

        </div>
    </fieldset>

      <fieldset class="fieldset-border">
        <legend class="legend-border">Solution Information</legend>
        <div class="row">

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.SolutionDescription, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.SolutionDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.SolutionDescription, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.KBAttachment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("KBAttachment", "", new { type = "file" })
                </div>
            </div>

        </div>
    </fieldset>
    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-success pull-right"> <span class="glyphicon glyphicon-plus-sign" type="submit"></span> Add</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary pull-left" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
