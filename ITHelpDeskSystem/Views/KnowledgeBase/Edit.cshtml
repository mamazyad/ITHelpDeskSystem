@model ITHelpDeskSystem.ViewModels.KnowledgeBaseViewModel

@{
    ViewBag.Title = "Edit solution";
}
<h2>Edit solution</h2>

<h3>Edit/update this solution</h3>

@using (Html.BeginForm("Edit", "KnowledgeBase", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SolutionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SolutionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SolutionDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KBAttachment, htmlAttributes: new { @class = "control-label col-md-2" })
             @if (!String.IsNullOrEmpty(Model.KBAttachmentFilePath))
            {
                <a style="display:inline-block; margin-right:10px" href="@Url.Content(Model.KBAttachmentFilePath)">View attachments </a>
            }
                <p style="display:inline-block;">  @Html.TextBox("KBAttachment", "", new { type = "file" })</p>
                
        </div>
    </div>

    <div style=" margin-top:30px;" class="form-actions no-color">
        <div style="display:inline; margin-right:40px;">@Html.ActionLink("Back to all sulotions", "Index", null, new { @class = "btn btn-primary" })</div>
        <button class="btn btn-success "> <span class="glyphicon glyphicon-floppy-saved" type="submit"></span> Save</button>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
