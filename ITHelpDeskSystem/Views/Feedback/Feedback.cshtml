@model ITHelpDeskSystem.ViewModels.FeedbackViewModel

@{
    ViewBag.Title = "Feedback";
}
<h2>Feedback</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Criteria)
            </th>
            <th>Very Unsatisfied</th>
            <th>Unsatisfied</th>
            <th>Neural</th>
            <th>Satisfied</th>
            <th>Very Satisfied</th>

        </tr>
        @for (int i = 0; i < Model.Criteria.Count(); i++)
        {
            <tr>
                <td>
                    @Html.HiddenFor(m => m.Criteria[i].Id)
                    @Html.DisplayFor(m => m.Criteria[i].CriterionDescription)
                </td>
                @foreach (var answer in Model.Criteria[i].PossibleAnswers)
                {
                    <td>
                        @Html.RadioButtonFor(m => m.Criteria[i].SelectedAnswer, answer.Id, new { id = answer.Id })
                    </td>
                }
                @Html.ValidationMessageFor(m => m.Criteria[i].SelectedAnswer)
            </tr>
        }
    </table>
    <div class="form-group">
        @Html.LabelFor(model => model.FeedbackComment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FeedbackComment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FeedbackComment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
